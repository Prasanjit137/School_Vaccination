{"ast":null,"code":"var _jsxFileName = \"/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport StatCard from './StatCard';\nimport ProgressCircle from './ProgressCircle';\nimport VaccineBreakdownChart from './VaccineBreakdownChart';\nimport DriveTable from './DriveTable';\nimport DriveModal from './DriveModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [vaccinatedCount, setVaccinatedCount] = useState(0);\n  const [vaccineStats, setVaccineStats] = useState([]);\n  const [drives, setDrives] = useState([]);\n  const [selectedDrive, setSelectedDrive] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [studentsRes, drivesRes] = await Promise.all([axios.get('http://localhost:5000/students'), axios.get('http://localhost:5000/vaccination-drives', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        })]);\n        const students = studentsRes.data;\n        const vaccinated = students.filter(s => s.vaccinationStatus === 'Vaccinated');\n        setTotalStudents(students.length);\n        setVaccinatedCount(vaccinated.length);\n        const vaccineMap = {};\n        vaccinated.forEach(student => {\n          const name = student.vaccinationName;\n          if (name) vaccineMap[name] = (vaccineMap[name] || 0) + 1;\n        });\n        setVaccineStats(Object.entries(vaccineMap).map(([vaccine, count]) => ({\n          vaccine,\n          count\n        })));\n        const sortedDrives = drivesRes.data.filter(drive => {\n          const today = new Date();\n          const driveDate = new Date(drive.date);\n          const timeDiff = driveDate - today;\n          const daysDiff = timeDiff / (1000 * 60 * 60 * 24);\n          return daysDiff >= 0 && daysDiff <= 30;\n        }).sort((a, b) => new Date(a.date) - new Date(b.date));\n        setDrives(sortedDrives);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n      }\n    };\n    fetchData();\n  }, []);\n  const vaccinatedPercentage = totalStudents ? (vaccinatedCount / totalStudents * 100).toFixed(2) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-primary fw-semibold border-bottom pb-2 d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-speedometer2 me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), \"Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Total Students\",\n        value: totalStudents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Vaccinated Students\",\n        value: vaccinatedCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        title: \"Vaccination %\",\n        value: `${vaccinatedPercentage}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: /*#__PURE__*/_jsxDEV(ProgressCircle, {\n        percentage: vaccinatedPercentage,\n        vaccinatedCount: vaccinatedCount,\n        totalStudents: totalStudents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VaccineBreakdownChart, {\n      data: vaccineStats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DriveTable, {\n      drives: drives,\n      onView: drive => {\n        setSelectedDrive(drive);\n        setShowModal(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), showModal && selectedDrive && /*#__PURE__*/_jsxDEV(DriveModal, {\n      drive: selectedDrive,\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DVG7NYUpXa0TC6Hk6AngmW0GsDg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","StatCard","ProgressCircle","VaccineBreakdownChart","DriveTable","DriveModal","jsxDEV","_jsxDEV","Dashboard","_s","totalStudents","setTotalStudents","vaccinatedCount","setVaccinatedCount","vaccineStats","setVaccineStats","drives","setDrives","selectedDrive","setSelectedDrive","showModal","setShowModal","fetchData","studentsRes","drivesRes","Promise","all","get","headers","Authorization","localStorage","getItem","students","data","vaccinated","filter","s","vaccinationStatus","length","vaccineMap","forEach","student","name","vaccinationName","Object","entries","map","vaccine","count","sortedDrives","drive","today","Date","driveDate","date","timeDiff","daysDiff","sort","a","b","err","console","error","vaccinatedPercentage","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","percentage","onView","onClose","_c","$RefreshReg$"],"sources":["/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport StatCard from './StatCard';\nimport ProgressCircle from './ProgressCircle';\nimport VaccineBreakdownChart from './VaccineBreakdownChart';\nimport DriveTable from './DriveTable';\nimport DriveModal from './DriveModal';\n\nconst Dashboard = () => {\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [vaccinatedCount, setVaccinatedCount] = useState(0);\n  const [vaccineStats, setVaccineStats] = useState([]);\n  const [drives, setDrives] = useState([]);\n  const [selectedDrive, setSelectedDrive] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [studentsRes, drivesRes] = await Promise.all([\n          axios.get('http://localhost:5000/students'),\n          axios.get('http://localhost:5000/vaccination-drives', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          }),\n        ]);\n\n        const students = studentsRes.data;\n        const vaccinated = students.filter(s => s.vaccinationStatus === 'Vaccinated');\n\n        setTotalStudents(students.length);\n        setVaccinatedCount(vaccinated.length);\n\n        const vaccineMap = {};\n        vaccinated.forEach(student => {\n          const name = student.vaccinationName;\n          if (name) vaccineMap[name] = (vaccineMap[name] || 0) + 1;\n        });\n        setVaccineStats(Object.entries(vaccineMap).map(([vaccine, count]) => ({ vaccine, count })));\n\n        const sortedDrives = drivesRes.data\n          .filter(drive => {\n            const today = new Date();\n            const driveDate = new Date(drive.date);\n            const timeDiff = driveDate - today;\n            const daysDiff = timeDiff / (1000 * 60 * 60 * 24);\n            return daysDiff >= 0 && daysDiff <= 30;\n          })\n          .sort((a, b) => new Date(a.date) - new Date(b.date));\n        setDrives(sortedDrives);\n\n      } catch (err) {\n        console.error('Error fetching data:', err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const vaccinatedPercentage = totalStudents\n    ? ((vaccinatedCount / totalStudents) * 100).toFixed(2)\n    : 0;\n\n  return (\n    <div className=\"container mt-4\">\n<h2 className=\"mb-4 text-primary fw-semibold border-bottom pb-2 d-inline-block\">\n  <i className=\"bi bi-speedometer2 me-2\"></i>Dashboard\n</h2>\n\n      <div className=\"row mt-4\">\n        <StatCard title=\"Total Students\" value={totalStudents} />\n        <StatCard title=\"Vaccinated Students\" value={vaccinatedCount} />\n        <StatCard title=\"Vaccination %\" value={`${vaccinatedPercentage}%`} />\n      </div>\n\n      <div className=\"row mt-4\">\n        <ProgressCircle\n          percentage={vaccinatedPercentage}\n          vaccinatedCount={vaccinatedCount}\n          totalStudents={totalStudents}\n        />\n      </div>\n\n      <VaccineBreakdownChart data={vaccineStats} />\n\n      <DriveTable drives={drives} onView={(drive) => {\n        setSelectedDrive(drive);\n        setShowModal(true);\n      }} />\n\n      {showModal && selectedDrive && (\n        <DriveModal drive={selectedDrive} onClose={() => setShowModal(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}