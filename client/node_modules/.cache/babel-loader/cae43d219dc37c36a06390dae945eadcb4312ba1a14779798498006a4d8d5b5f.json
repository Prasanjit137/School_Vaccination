{"ast":null,"code":"var _jsxFileName = \"/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/frontend/src/components/DriveForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DriveForm = ({\n  form,\n  setForm,\n  editingId,\n  setEditingId,\n  drives,\n  fetchDrives,\n  enableChanges\n}) => {\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    var _drives$find;\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const selectedDate = new Date(form.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const minAllowedDate = new Date();\n    minAllowedDate.setDate(today.getDate() + 15);\n    const isCreating = editingId === null;\n    const isDateChanged = ((_drives$find = drives.find(d => d.id === editingId)) === null || _drives$find === void 0 ? void 0 : _drives$find.date) !== form.date;\n    if (!enableChanges && (isCreating || isDateChanged) && selectedDate < minAllowedDate) {\n      alert('Vaccination drive date must be at least 15 days from today.');\n      return;\n    }\n    const payload = {\n      vaccine: form.vaccineName,\n      date: form.date,\n      doses: parseInt(form.doses),\n      classes: form.classes\n    };\n    try {\n      let url = 'http://localhost:5000/vaccination-drives';\n      let method = 'POST';\n      if (!isCreating) {\n        url += `/${editingId}`;\n        method = 'PUT';\n      }\n      const res = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      await res.json();\n      setForm({\n        vaccineName: '',\n        date: '',\n        doses: '',\n        classes: ''\n      });\n      setEditingId(null);\n      fetchDrives();\n    } catch (err) {\n      console.error('Error saving drive:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3 mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: editingId !== null ? 'Edit Drive' : 'Create Vaccination Drive'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [['vaccineName', 'date', 'doses', 'classes'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: field === 'vaccineName' ? 'Vaccine Name' : field === 'date' ? 'Date of Drive' : field === 'doses' ? 'Number of Available Doses' : 'Applicable Classes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === 'date' ? 'date' : field === 'doses' ? 'number' : 'text',\n          name: field,\n          className: \"form-control\",\n          value: form[field],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: editingId !== null ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), editingId !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => {\n          setEditingId(null);\n          setForm({\n            vaccineName: '',\n            date: '',\n            doses: '',\n            classes: ''\n          });\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_c = DriveForm;\nexport default DriveForm;\nvar _c;\n$RefreshReg$(_c, \"DriveForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DriveForm","form","setForm","editingId","setEditingId","drives","fetchDrives","enableChanges","handleChange","e","target","name","value","handleSubmit","_drives$find","preventDefault","token","localStorage","getItem","selectedDate","Date","date","today","setHours","minAllowedDate","setDate","getDate","isCreating","isDateChanged","find","d","id","alert","payload","vaccine","vaccineName","doses","parseInt","classes","url","method","res","fetch","headers","Authorization","body","JSON","stringify","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/frontend/src/components/DriveForm.js"],"sourcesContent":["import React from 'react';\n\nconst DriveForm = ({\n  form,\n  setForm,\n  editingId,\n  setEditingId,\n  drives,\n  fetchDrives,\n  enableChanges,\n}) => {\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n\n    const selectedDate = new Date(form.date);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const minAllowedDate = new Date();\n    minAllowedDate.setDate(today.getDate() + 15);\n\n    const isCreating = editingId === null;\n    const isDateChanged = drives.find((d) => d.id === editingId)?.date !== form.date;\n\n    if (!enableChanges && (isCreating || isDateChanged) && selectedDate < minAllowedDate) {\n      alert('Vaccination drive date must be at least 15 days from today.');\n      return;\n    }\n\n    const payload = {\n      vaccine: form.vaccineName,\n      date: form.date,\n      doses: parseInt(form.doses),\n      classes: form.classes,\n    };\n\n    try {\n      let url = 'http://localhost:5000/vaccination-drives';\n      let method = 'POST';\n\n      if (!isCreating) {\n        url += `/${editingId}`;\n        method = 'PUT';\n      }\n\n      const res = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      await res.json();\n\n      setForm({ vaccineName: '', date: '', doses: '', classes: '' });\n      setEditingId(null);\n      fetchDrives();\n    } catch (err) {\n      console.error('Error saving drive:', err);\n    }\n  };\n\n  return (\n    <div className=\"card p-3 mt-4\">\n      <h4>{editingId !== null ? 'Edit Drive' : 'Create Vaccination Drive'}</h4>\n      <form onSubmit={handleSubmit}>\n        {['vaccineName', 'date', 'doses', 'classes'].map((field) => (\n          <div className=\"mb-3\" key={field}>\n            <label className=\"form-label\">\n              {field === 'vaccineName'\n                ? 'Vaccine Name'\n                : field === 'date'\n                ? 'Date of Drive'\n                : field === 'doses'\n                ? 'Number of Available Doses'\n                : 'Applicable Classes'}\n            </label>\n            <input\n              type={field === 'date' ? 'date' : field === 'doses' ? 'number' : 'text'}\n              name={field}\n              className=\"form-control\"\n              value={form[field]}\n              onChange={handleChange}\n              required\n            />\n          </div>\n        ))}\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          {editingId !== null ? 'Update' : 'Create'}\n        </button>\n        {editingId !== null && (\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary ms-2\"\n            onClick={() => {\n              setEditingId(null);\n              setForm({ vaccineName: '', date: '', doses: '', classes: '' });\n            }}\n          >\n            Cancel\n          </button>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default DriveForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}