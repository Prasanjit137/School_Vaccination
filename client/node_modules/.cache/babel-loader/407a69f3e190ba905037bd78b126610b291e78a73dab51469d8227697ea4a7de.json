{"ast":null,"code":"var _jsxFileName = \"/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/frontend/src/components/ManageStudents.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ManageStudents = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    class: '',\n    studentId: '',\n    vaccinationName: '',\n    vaccinationStatus: 'Not Vaccinated',\n    vaccinationDate: '',\n    bookingStatus: '',\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [bookingIndex, setBookingIndex] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n\n  const fetchStudents = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/students');\n      setStudents(res.data);\n    } catch (err) {\n      console.error('Error fetching students:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const handleAddStudent = async () => {\n    const { name, class: studentClass, studentId } = newStudent;\n\n    if (!name || !studentClass || !studentId) {\n      alert('Please fill all fields!');\n      return;\n    }\n\n    const payload = { ...newStudent };\n    if (newStudent.vaccinationStatus === 'Not Vaccinated') {\n      payload.vaccinationDate = null;\n    }\n\n    try {\n      await axios.post('http://localhost:5000/students', payload);\n      setNewStudent({\n        name: '',\n        class: '',\n        studentId: '',\n      });\n      fetchStudents();\n    } catch (err) {\n      console.error('Error adding student:', err);\n    }\n  };\n\n  const handleEditClick = (index) => {\n    setEditingIndex(index);\n    setBookingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleBookClick = (index) => {\n    setBookingIndex(index);\n    setEditingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleSave = async () => {\n    const { id, bookingStatus, vaccinationStatus } = editData;\n\n    if (bookingStatus === 'Pending' || !bookingStatus || bookingStatus === 'Not Approved') {\n      const { name, class: studentClass, studentId } = editData;\n      if (!name || !studentClass || !studentId) {\n        alert('Please fill all fields!');\n        return;\n      }\n    }\n\n    if (bookingStatus === 'Approved' && vaccinationStatus !== 'Vaccinated') {\n      alert('You can only mark as Vaccinated.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://localhost:5000/students/${id}`, editData);\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error updating student:', err);\n    }\n  };\n\n  const handleMarkAsVaccinated = async () => {\n  try {\n    await axios.put(`http://localhost:5000/vaccinationStatus/${editData.id}`, {\n      ...editData,\n      vaccinationStatus: 'Vaccinated',\n    });\n    setEditingIndex(null);\n    fetchStudents(); // Refreshes updated data\n  } catch (err) {\n    console.error('Error marking vaccinated:', err);\n  }\n};\n\n  const handleVaccinationSave = async () => {\n    const { vaccinationName, vaccinationDate, id } = editData;\n\n    if (!vaccinationName || !vaccinationDate) {\n      alert('Please fill all vaccination fields!');\n      return;\n    }\n\n    try {\n      await axios.put(`http://localhost:5000/vaccination/${id}`, {\n        vaccinationName,\n        vaccinationDate,\n        vaccinationStatus: 'Not Vaccinated',\n        bookingStatus: 'Pending',\n      });\n\n      setBookingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error saving vaccination info:', err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/students/${id}`);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error deleting student:', err);\n    }\n  };\n\n  const handleCsvUpload = async () => {\n    if (!csvFile) {\n      alert('Please select a CSV file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', csvFile);\n\n    try {\n      await axios.post('http://localhost:5000/upload-csv', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('CSV uploaded successfully!');\n      setCsvFile(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('CSV upload error:', err);\n      alert('Failed to upload CSV');\n    }\n  };\n\n  const filteredStudents = students.filter((student) => {\n    const term = searchTerm.toLowerCase();\n    return (\n      student.name?.toLowerCase().includes(term) ||\n      student.studentId?.toLowerCase().includes(term) ||\n      student.class?.toLowerCase().includes(term) ||\n      student.vaccinationName?.toLowerCase().includes(term) ||\n      student.vaccinationStatus?.toLowerCase().includes(term) ||\n      student.bookingStatus?.toLowerCase().includes(term)\n    );\n  });\n\n  return (\n    <div className=\"p-8 max-w-6xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Manage Students</h1>\n\n     \n      <div className=\"mb-8 border p-4 rounded shadow\">\n        <h2 className=\"text-xl font-semibold mb-4\">Add New Student</h2>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n          <input placeholder=\"Name\" value={newStudent.name} onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })} className=\"border p-2 rounded\" />\n          <input placeholder=\"Class\" value={newStudent.class} onChange={(e) => setNewStudent({ ...newStudent, class: e.target.value })} className=\"border p-2 rounded\" />\n          <input placeholder=\"Student ID\" value={newStudent.studentId} onChange={(e) => setNewStudent({ ...newStudent, studentId: e.target.value })} className=\"border p-2 rounded\" />\n        </div>\n        <button onClick={handleAddStudent} className=\"btn btn-primary mt-4\">Add Student</button>\n      </div>\n\n   \n      <div className=\"mb-8 border p-4 rounded shadow\">\n        <h2 className=\"text-xl font-semibold mb-4\">Bulk Upload via CSV</h2>\n        <input type=\"file\" accept=\".csv\" onChange={(e) => setCsvFile(e.target.files[0])} className=\"mb-2\" />\n        <button onClick={handleCsvUpload} className=\"btn btn-secondary\" disabled={!csvFile}>Upload CSV</button>\n      </div>\n\n     \n      <input placeholder=\"Search...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"border p-2 rounded w-full mb-4\" />\n\n   \n      <table className=\"w-full border-collapse border\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            <th className=\"border p-2\">Name</th>\n            <th className=\"border p-2\">Class</th>\n            <th className=\"border p-2\">Student ID</th>\n            <th className=\"border p-2\">Booking Status</th>\n            <th className=\"border p-2\">Vaccination</th>\n            <th className=\"border p-2\">Date</th>\n            <th className=\"border p-2\">Status</th>\n            <th className=\"border p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredStudents.map((student, index) => {\n            const isEditing = editingIndex === index;\n            const isBooking = bookingIndex === index;\n\n            return (\n              <tr key={student.id}>\n                {isEditing ? (\n                  <>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.name} onChange={(e) => setEditData({ ...editData, name: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.name\n                      )}\n                    </td>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.class} onChange={(e) => setEditData({ ...editData, class: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.class\n                      )}\n                    </td>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.studentId} onChange={(e) => setEditData({ ...editData, studentId: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.studentId\n                      )}\n                    </td>\n                    <td className=\"border p-2\">{editData.bookingStatus}</td>\n                    <td className=\"border p-2\">{editData.vaccinationName}</td>\n                    <td className=\"border p-2\">{editData.vaccinationDate ? new Date(editData.vaccinationDate).toLocaleDateString() : 'â€”'}</td>\n                    <td className=\"border p-2\">\n                      {editData.bookingStatus === 'Approved' && editData.vaccinationStatus !== 'Vaccinated' ? (\n                        <button onClick={handleMarkAsVaccinated} className=\"bg-blue-600 text-white px-2 py-1 rounded\">Mark as Vaccinated</button>\n                      ) : (\n                        editData.vaccinationStatus\n                      )}\n                    </td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button onClick={handleSave} className=\"bg-green-600 text-white px-2 py-1 rounded\">Save</button>\n                      <button onClick={() => setEditingIndex(null)} className=\"bg-gray-500 text-white px-2 py-1 rounded\">Cancel</button>\n                    </td>\n                  </>\n                ) : isBooking ? (\n                  <>\n                    <td className=\"border p-2\">{student.name}</td>\n                    <td className=\"border p-2\">{student.class}</td>\n                    <td className=\"border p-2\">{student.studentId}</td>\n                    <td className=\"border p-2\">{student.bookingStatus}</td>\n                    <td className=\"border p-2\">\n                      <input value={editData.vaccinationName || ''} onChange={(e) => setEditData({ ...editData, vaccinationName: e.target.value })} className=\"border p-1 rounded w-full\" />\n                    </td>\n                    <td className=\"border p-2\">\n                      <input type=\"date\" value={editData.vaccinationDate || ''} onChange={(e) => setEditData({ ...editData, vaccinationDate: e.target.value })} className=\"border p-1 rounded w-full\" />\n                    </td>\n                    <td className=\"border p-2\">{editData.vaccinationStatus || 'Not Vaccinated'}</td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button onClick={handleVaccinationSave} className=\"bg-blue-600 text-white px-2 py-1 rounded\">Save</button>\n                      <button onClick={() => setBookingIndex(null)} className=\"bg-gray-500 text-white px-2 py-1 rounded\">Cancel</button>\n                    </td>\n                  </>\n                ) : (\n                  <>\n                    <td className=\"border p-2\">{student.name}</td>\n                    <td className=\"border p-2\">{student.class}</td>\n                    <td className=\"border p-2\">{student.studentId}</td>\n                    <td className=\"border p-2\">{student.bookingStatus}</td>\n                    <td className=\"border p-2\">{student.vaccinationName}</td>\n                    <td className=\"border p-2\">{student.vaccinationDate ? new Date(student.vaccinationDate).toLocaleDateString() : 'â€”'}</td>\n                    <td className=\"border p-2\">{student.vaccinationStatus}</td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button\n                        onClick={() => handleEditClick(index)}\n                        className=\"btn btn-sm btn-warning\"\n                        disabled={student.bookingStatus === 'Approved' && student.vaccinationStatus === 'Vaccinated'}\n                      >\n                        Edit\n                      </button>\n                      <button onClick={() => handleDelete(student.id)} className=\"btn btn-sm btn-danger\">Delete</button>\n                      <button\n                        onClick={() => handleBookClick(index)}\n                        className=\"btn btn-sm btn-success\"\n                        disabled={student.bookingStatus === 'Approved' || student.bookingStatus === 'Pending'}\n                      >\n                        Book Drive\n                      </button>\n                    </td>\n                  </>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageStudents;\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AddStudentForm from './AddStudentForm';\nimport CsvUpload from './CsvUpload';\nimport StudentTable from './StudentTable';\nimport PendingBookings from './PendingBookings';\nimport ToggleSwitch from './ToggleSwitch'; // Import the toggle component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageStudents = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    class: '',\n    studentId: '',\n    vaccinationName: '',\n    vaccinationStatus: 'Not Vaccinated',\n    vaccinationDate: '',\n    bookingStatus: ''\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [bookingIndex, setBookingIndex] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const [enableChanges, setEnableChanges] = useState(false);\n  const fetchStudents = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/students');\n      setStudents(res.data);\n    } catch (err) {\n      console.error('Error fetching students:', err);\n    }\n  };\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const handleAddStudent = async () => {\n    const {\n      name,\n      class: studentClass,\n      studentId\n    } = newStudent;\n    if (!name || !studentClass || !studentId) return alert('Please fill all fields!');\n    const payload = {\n      ...newStudent\n    };\n    if (payload.vaccinationStatus === 'Not Vaccinated') payload.vaccinationDate = null;\n    try {\n      await axios.post('http://localhost:5000/students', payload);\n      setNewStudent({\n        name: '',\n        class: '',\n        studentId: ''\n      });\n      fetchStudents();\n    } catch (err) {\n      console.error('Error adding student:', err);\n    }\n  };\n  const handleEditClick = index => {\n    setEditingIndex(index);\n    setBookingIndex(null);\n    setEditData({\n      ...students[index]\n    });\n  };\n  const handleBookClick = index => {\n    setBookingIndex(index);\n    setEditingIndex(null);\n    setEditData({\n      ...students[index]\n    });\n  };\n  const handleSave = async () => {\n    const {\n      id,\n      bookingStatus,\n      vaccinationStatus\n    } = editData;\n    if ((bookingStatus === 'Pending' || !bookingStatus || bookingStatus === 'Not Approved') && (!editData.name || !editData.class || !editData.studentId)) {\n      return alert('Please fill all fields!');\n    }\n    if (bookingStatus === 'Approved' && vaccinationStatus !== 'Vaccinated') {\n      return alert('You can only mark as Vaccinated.');\n    }\n    try {\n      await axios.put(`http://localhost:5000/students/${id}`, editData);\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error updating student:', err);\n    }\n  };\n  const handleMarkAsVaccinated = async () => {\n    try {\n      await axios.put(`http://localhost:5000/vaccinationStatus/${editData.id}`, {\n        ...editData,\n        vaccinationStatus: 'Vaccinated'\n      });\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error marking vaccinated:', err);\n    }\n  };\n  const handleVaccinationSave = async () => {\n    const {\n      vaccinationName,\n      vaccinationDate,\n      id\n    } = editData;\n    if (!vaccinationName || !vaccinationDate) return alert('Please fill all vaccination fields!');\n    try {\n      await axios.put(`http://localhost:5000/vaccination/${id}`, {\n        vaccinationName,\n        vaccinationDate,\n        vaccinationStatus: 'Not Vaccinated',\n        bookingStatus: 'Pending'\n      });\n      setBookingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error saving vaccination info:', err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/students/${id}`);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error deleting student:', err);\n    }\n  };\n  const handleCsvUpload = async () => {\n    if (!csvFile) return alert('Please select a CSV file first!');\n    const formData = new FormData();\n    formData.append('file', csvFile);\n    try {\n      await axios.post('http://localhost:5000/upload-csv', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('CSV uploaded successfully!');\n      setCsvFile(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('CSV upload error:', err);\n      alert('Failed to upload CSV');\n    }\n  };\n  const filteredStudents = students.filter(student => [student.name, student.studentId, student.class, student.vaccinationName, student.vaccinationStatus, student.bookingStatus].some(field => field === null || field === void 0 ? void 0 : field.toLowerCase().includes(searchTerm.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-6xl mx-auto bg-gray-50 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-6 text-3xl font-semibold text-primary border-b-4 border-primary pb-2 flex items-center space-x-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-speedometer2 text-primary text-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Manage Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n      enableChanges: enableChanges,\n      setEnableChanges: setEnableChanges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 3\n    }, this), enableChanges && /*#__PURE__*/_jsxDEV(PendingBookings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-white p-6 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(AddStudentForm, {\n        newStudent: newStudent,\n        setNewStudent: setNewStudent,\n        handleAddStudent: handleAddStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-white p-6 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(CsvUpload, {\n        csvFile: csvFile,\n        setCsvFile: setCsvFile,\n        handleCsvUpload: handleCsvUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"border-2 border-gray-300 p-3 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(StudentTable, {\n        students: filteredStudents,\n        editingIndex: editingIndex,\n        bookingIndex: bookingIndex,\n        editData: editData,\n        setEditData: setEditData,\n        handleEditClick: handleEditClick,\n        handleBookClick: handleBookClick,\n        handleDelete: handleDelete,\n        handleSave: handleSave,\n        handleVaccinationSave: handleVaccinationSave,\n        handleMarkAsVaccinated: handleMarkAsVaccinated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageStudents, \"35I17SAYewPRKEsGybmS9UOBMXQ=\");\n_c = ManageStudents;\nexport default ManageStudents;\nvar _c;\n$RefreshReg$(_c, \"ManageStudents\");","map":{"version":3,"names":["React","useEffect","useState","axios","AddStudentForm","CsvUpload","StudentTable","PendingBookings","ToggleSwitch","jsxDEV","_jsxDEV","ManageStudents","_s","students","setStudents","newStudent","setNewStudent","name","class","studentId","vaccinationName","vaccinationStatus","vaccinationDate","bookingStatus","editingIndex","setEditingIndex","bookingIndex","setBookingIndex","editData","setEditData","searchTerm","setSearchTerm","csvFile","setCsvFile","enableChanges","setEnableChanges","fetchStudents","res","get","data","err","console","error","handleAddStudent","studentClass","alert","payload","post","handleEditClick","index","handleBookClick","handleSave","id","put","handleMarkAsVaccinated","handleVaccinationSave","handleDelete","delete","handleCsvUpload","formData","FormData","append","headers","filteredStudents","filter","student","some","field","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/prasanjitsarkar/VS Code/Self/SCHOOL_VACCINATION_PORTAL/frontend/src/components/ManageStudents.js"],"sourcesContent":["/*\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ManageStudents = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    class: '',\n    studentId: '',\n    vaccinationName: '',\n    vaccinationStatus: 'Not Vaccinated',\n    vaccinationDate: '',\n    bookingStatus: '',\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [bookingIndex, setBookingIndex] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n\n  const fetchStudents = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/students');\n      setStudents(res.data);\n    } catch (err) {\n      console.error('Error fetching students:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const handleAddStudent = async () => {\n    const { name, class: studentClass, studentId } = newStudent;\n\n    if (!name || !studentClass || !studentId) {\n      alert('Please fill all fields!');\n      return;\n    }\n\n    const payload = { ...newStudent };\n    if (newStudent.vaccinationStatus === 'Not Vaccinated') {\n      payload.vaccinationDate = null;\n    }\n\n    try {\n      await axios.post('http://localhost:5000/students', payload);\n      setNewStudent({\n        name: '',\n        class: '',\n        studentId: '',\n      });\n      fetchStudents();\n    } catch (err) {\n      console.error('Error adding student:', err);\n    }\n  };\n\n  const handleEditClick = (index) => {\n    setEditingIndex(index);\n    setBookingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleBookClick = (index) => {\n    setBookingIndex(index);\n    setEditingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleSave = async () => {\n    const { id, bookingStatus, vaccinationStatus } = editData;\n\n    if (bookingStatus === 'Pending' || !bookingStatus || bookingStatus === 'Not Approved') {\n      const { name, class: studentClass, studentId } = editData;\n      if (!name || !studentClass || !studentId) {\n        alert('Please fill all fields!');\n        return;\n      }\n    }\n\n    if (bookingStatus === 'Approved' && vaccinationStatus !== 'Vaccinated') {\n      alert('You can only mark as Vaccinated.');\n      return;\n    }\n\n    try {\n      await axios.put(`http://localhost:5000/students/${id}`, editData);\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error updating student:', err);\n    }\n  };\n\n  const handleMarkAsVaccinated = async () => {\n  try {\n    await axios.put(`http://localhost:5000/vaccinationStatus/${editData.id}`, {\n      ...editData,\n      vaccinationStatus: 'Vaccinated',\n    });\n    setEditingIndex(null);\n    fetchStudents(); // Refreshes updated data\n  } catch (err) {\n    console.error('Error marking vaccinated:', err);\n  }\n};\n\n  const handleVaccinationSave = async () => {\n    const { vaccinationName, vaccinationDate, id } = editData;\n\n    if (!vaccinationName || !vaccinationDate) {\n      alert('Please fill all vaccination fields!');\n      return;\n    }\n\n    try {\n      await axios.put(`http://localhost:5000/vaccination/${id}`, {\n        vaccinationName,\n        vaccinationDate,\n        vaccinationStatus: 'Not Vaccinated',\n        bookingStatus: 'Pending',\n      });\n\n      setBookingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error saving vaccination info:', err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/students/${id}`);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error deleting student:', err);\n    }\n  };\n\n  const handleCsvUpload = async () => {\n    if (!csvFile) {\n      alert('Please select a CSV file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', csvFile);\n\n    try {\n      await axios.post('http://localhost:5000/upload-csv', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('CSV uploaded successfully!');\n      setCsvFile(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('CSV upload error:', err);\n      alert('Failed to upload CSV');\n    }\n  };\n\n  const filteredStudents = students.filter((student) => {\n    const term = searchTerm.toLowerCase();\n    return (\n      student.name?.toLowerCase().includes(term) ||\n      student.studentId?.toLowerCase().includes(term) ||\n      student.class?.toLowerCase().includes(term) ||\n      student.vaccinationName?.toLowerCase().includes(term) ||\n      student.vaccinationStatus?.toLowerCase().includes(term) ||\n      student.bookingStatus?.toLowerCase().includes(term)\n    );\n  });\n\n  return (\n    <div className=\"p-8 max-w-6xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Manage Students</h1>\n\n     \n      <div className=\"mb-8 border p-4 rounded shadow\">\n        <h2 className=\"text-xl font-semibold mb-4\">Add New Student</h2>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n          <input placeholder=\"Name\" value={newStudent.name} onChange={(e) => setNewStudent({ ...newStudent, name: e.target.value })} className=\"border p-2 rounded\" />\n          <input placeholder=\"Class\" value={newStudent.class} onChange={(e) => setNewStudent({ ...newStudent, class: e.target.value })} className=\"border p-2 rounded\" />\n          <input placeholder=\"Student ID\" value={newStudent.studentId} onChange={(e) => setNewStudent({ ...newStudent, studentId: e.target.value })} className=\"border p-2 rounded\" />\n        </div>\n        <button onClick={handleAddStudent} className=\"btn btn-primary mt-4\">Add Student</button>\n      </div>\n\n   \n      <div className=\"mb-8 border p-4 rounded shadow\">\n        <h2 className=\"text-xl font-semibold mb-4\">Bulk Upload via CSV</h2>\n        <input type=\"file\" accept=\".csv\" onChange={(e) => setCsvFile(e.target.files[0])} className=\"mb-2\" />\n        <button onClick={handleCsvUpload} className=\"btn btn-secondary\" disabled={!csvFile}>Upload CSV</button>\n      </div>\n\n     \n      <input placeholder=\"Search...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"border p-2 rounded w-full mb-4\" />\n\n   \n      <table className=\"w-full border-collapse border\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            <th className=\"border p-2\">Name</th>\n            <th className=\"border p-2\">Class</th>\n            <th className=\"border p-2\">Student ID</th>\n            <th className=\"border p-2\">Booking Status</th>\n            <th className=\"border p-2\">Vaccination</th>\n            <th className=\"border p-2\">Date</th>\n            <th className=\"border p-2\">Status</th>\n            <th className=\"border p-2\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredStudents.map((student, index) => {\n            const isEditing = editingIndex === index;\n            const isBooking = bookingIndex === index;\n\n            return (\n              <tr key={student.id}>\n                {isEditing ? (\n                  <>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.name} onChange={(e) => setEditData({ ...editData, name: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.name\n                      )}\n                    </td>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.class} onChange={(e) => setEditData({ ...editData, class: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.class\n                      )}\n                    </td>\n                    <td className=\"border p-2\">\n                      {(editData.bookingStatus === 'Pending' || !editData.bookingStatus || editData.bookingStatus === 'Not Approved') ? (\n                        <input value={editData.studentId} onChange={(e) => setEditData({ ...editData, studentId: e.target.value })} className=\"border p-1 rounded w-full\" />\n                      ) : (\n                        editData.studentId\n                      )}\n                    </td>\n                    <td className=\"border p-2\">{editData.bookingStatus}</td>\n                    <td className=\"border p-2\">{editData.vaccinationName}</td>\n                    <td className=\"border p-2\">{editData.vaccinationDate ? new Date(editData.vaccinationDate).toLocaleDateString() : 'â€”'}</td>\n                    <td className=\"border p-2\">\n                      {editData.bookingStatus === 'Approved' && editData.vaccinationStatus !== 'Vaccinated' ? (\n                        <button onClick={handleMarkAsVaccinated} className=\"bg-blue-600 text-white px-2 py-1 rounded\">Mark as Vaccinated</button>\n                      ) : (\n                        editData.vaccinationStatus\n                      )}\n                    </td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button onClick={handleSave} className=\"bg-green-600 text-white px-2 py-1 rounded\">Save</button>\n                      <button onClick={() => setEditingIndex(null)} className=\"bg-gray-500 text-white px-2 py-1 rounded\">Cancel</button>\n                    </td>\n                  </>\n                ) : isBooking ? (\n                  <>\n                    <td className=\"border p-2\">{student.name}</td>\n                    <td className=\"border p-2\">{student.class}</td>\n                    <td className=\"border p-2\">{student.studentId}</td>\n                    <td className=\"border p-2\">{student.bookingStatus}</td>\n                    <td className=\"border p-2\">\n                      <input value={editData.vaccinationName || ''} onChange={(e) => setEditData({ ...editData, vaccinationName: e.target.value })} className=\"border p-1 rounded w-full\" />\n                    </td>\n                    <td className=\"border p-2\">\n                      <input type=\"date\" value={editData.vaccinationDate || ''} onChange={(e) => setEditData({ ...editData, vaccinationDate: e.target.value })} className=\"border p-1 rounded w-full\" />\n                    </td>\n                    <td className=\"border p-2\">{editData.vaccinationStatus || 'Not Vaccinated'}</td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button onClick={handleVaccinationSave} className=\"bg-blue-600 text-white px-2 py-1 rounded\">Save</button>\n                      <button onClick={() => setBookingIndex(null)} className=\"bg-gray-500 text-white px-2 py-1 rounded\">Cancel</button>\n                    </td>\n                  </>\n                ) : (\n                  <>\n                    <td className=\"border p-2\">{student.name}</td>\n                    <td className=\"border p-2\">{student.class}</td>\n                    <td className=\"border p-2\">{student.studentId}</td>\n                    <td className=\"border p-2\">{student.bookingStatus}</td>\n                    <td className=\"border p-2\">{student.vaccinationName}</td>\n                    <td className=\"border p-2\">{student.vaccinationDate ? new Date(student.vaccinationDate).toLocaleDateString() : 'â€”'}</td>\n                    <td className=\"border p-2\">{student.vaccinationStatus}</td>\n                    <td className=\"border p-2 space-x-2\">\n                      <button\n                        onClick={() => handleEditClick(index)}\n                        className=\"btn btn-sm btn-warning\"\n                        disabled={student.bookingStatus === 'Approved' && student.vaccinationStatus === 'Vaccinated'}\n                      >\n                        Edit\n                      </button>\n                      <button onClick={() => handleDelete(student.id)} className=\"btn btn-sm btn-danger\">Delete</button>\n                      <button\n                        onClick={() => handleBookClick(index)}\n                        className=\"btn btn-sm btn-success\"\n                        disabled={student.bookingStatus === 'Approved' || student.bookingStatus === 'Pending'}\n                      >\n                        Book Drive\n                      </button>\n                    </td>\n                  </>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageStudents;\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AddStudentForm from './AddStudentForm';\nimport CsvUpload from './CsvUpload';\nimport StudentTable from './StudentTable';\nimport PendingBookings from './PendingBookings';\nimport ToggleSwitch from './ToggleSwitch'; // Import the toggle component\n\nconst ManageStudents = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    class: '',\n    studentId: '',\n    vaccinationName: '',\n    vaccinationStatus: 'Not Vaccinated',\n    vaccinationDate: '',\n    bookingStatus: ''\n  });\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [bookingIndex, setBookingIndex] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const [enableChanges, setEnableChanges] = useState(false);\n\n  const fetchStudents = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/students');\n      setStudents(res.data);\n    } catch (err) {\n      console.error('Error fetching students:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const handleAddStudent = async () => {\n    const { name, class: studentClass, studentId } = newStudent;\n    if (!name || !studentClass || !studentId) return alert('Please fill all fields!');\n    const payload = { ...newStudent };\n    if (payload.vaccinationStatus === 'Not Vaccinated') payload.vaccinationDate = null;\n    try {\n      await axios.post('http://localhost:5000/students', payload);\n      setNewStudent({ name: '', class: '', studentId: '' });\n      fetchStudents();\n    } catch (err) {\n      console.error('Error adding student:', err);\n    }\n  };\n\n  const handleEditClick = (index) => {\n    setEditingIndex(index);\n    setBookingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleBookClick = (index) => {\n    setBookingIndex(index);\n    setEditingIndex(null);\n    setEditData({ ...students[index] });\n  };\n\n  const handleSave = async () => {\n    const { id, bookingStatus, vaccinationStatus } = editData;\n    if ((bookingStatus === 'Pending' || !bookingStatus || bookingStatus === 'Not Approved') &&\n      (!editData.name || !editData.class || !editData.studentId)) {\n      return alert('Please fill all fields!');\n    }\n    if (bookingStatus === 'Approved' && vaccinationStatus !== 'Vaccinated') {\n      return alert('You can only mark as Vaccinated.');\n    }\n    try {\n      await axios.put(`http://localhost:5000/students/${id}`, editData);\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error updating student:', err);\n    }\n  };\n\n  const handleMarkAsVaccinated = async () => {\n    try {\n      await axios.put(`http://localhost:5000/vaccinationStatus/${editData.id}`, {\n        ...editData,\n        vaccinationStatus: 'Vaccinated'\n      });\n      setEditingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error marking vaccinated:', err);\n    }\n  };\n\n  const handleVaccinationSave = async () => {\n    const { vaccinationName, vaccinationDate, id } = editData;\n    if (!vaccinationName || !vaccinationDate) return alert('Please fill all vaccination fields!');\n    try {\n      await axios.put(`http://localhost:5000/vaccination/${id}`, {\n        vaccinationName,\n        vaccinationDate,\n        vaccinationStatus: 'Not Vaccinated',\n        bookingStatus: 'Pending'\n      });\n      setBookingIndex(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error saving vaccination info:', err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/students/${id}`);\n      fetchStudents();\n    } catch (err) {\n      console.error('Error deleting student:', err);\n    }\n  };\n\n  const handleCsvUpload = async () => {\n    if (!csvFile) return alert('Please select a CSV file first!');\n    const formData = new FormData();\n    formData.append('file', csvFile);\n    try {\n      await axios.post('http://localhost:5000/upload-csv', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('CSV uploaded successfully!');\n      setCsvFile(null);\n      fetchStudents();\n    } catch (err) {\n      console.error('CSV upload error:', err);\n      alert('Failed to upload CSV');\n    }\n  };\n\n  const filteredStudents = students.filter((student) =>\n    [student.name, student.studentId, student.class, student.vaccinationName, student.vaccinationStatus, student.bookingStatus]\n      .some(field => field?.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  return (\n    <div className=\"p-8 max-w-6xl mx-auto bg-gray-50 rounded-lg shadow-lg\">\n  <h1 className=\"mb-6 text-3xl font-semibold text-primary border-b-4 border-primary pb-2 flex items-center space-x-3\">\n    <i className=\"bi bi-speedometer2 text-primary text-xl\"></i>\n    <span>Manage Students</span>\n  </h1>\n\n  <ToggleSwitch\n    enableChanges={enableChanges}\n    setEnableChanges={setEnableChanges}\n  />\n\n  {enableChanges && <PendingBookings />}\n\n  <div className=\"mt-6 bg-white p-6 rounded-lg shadow-md\">\n    <AddStudentForm\n      newStudent={newStudent}\n      setNewStudent={setNewStudent}\n      handleAddStudent={handleAddStudent}\n    />\n  </div>\n\n  <div className=\"mt-6 bg-white p-6 rounded-lg shadow-md\">\n    <CsvUpload\n      csvFile={csvFile}\n      setCsvFile={setCsvFile}\n      handleCsvUpload={handleCsvUpload}\n    />\n  </div>\n\n  {/* Adding extra space before and after the search input */}\n  <div className=\"mt-6 mb-6\">\n    <input\n      placeholder=\"Search...\"\n      value={searchTerm}\n      onChange={(e) => setSearchTerm(e.target.value)}\n      className=\"border-2 border-gray-300 p-3 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-primary\"\n    />\n  </div>\n\n  <div className=\"bg-white p-6 rounded-lg shadow-md\">\n    <StudentTable\n      students={filteredStudents}\n      editingIndex={editingIndex}\n      bookingIndex={bookingIndex}\n      editData={editData}\n      setEditData={setEditData}\n      handleEditClick={handleEditClick}\n      handleBookClick={handleBookClick}\n      handleDelete={handleDelete}\n      handleSave={handleSave}\n      handleVaccinationSave={handleVaccinationSave}\n      handleMarkAsVaccinated={handleMarkAsVaccinated}\n    />\n  </div>\n</div>\n  );\n};\n\nexport default ManageStudents;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}